#################################################################
#################################################################
############### Notebook Generator ##############################
#################################################################
#################################################################
##### Author: Denis Torre
##### Affiliation: Ma'ayan Laboratory,
##### Icahn School of Medicine at Mount Sinai

#################################################################
#################################################################
############### 1. Library Configuration ########################
#################################################################
#################################################################

#############################################
########## 1. Load libraries
#############################################
##### 1. Python modules #####
import nbformat as nbf

#################################################################
#################################################################
############### 1. Notebook Generation ##########################
#################################################################
#################################################################

#############################################
########## 1. Generate Notebook
#############################################

def GenerateNotebook(acc):

	# Create new notebook
	notebook = nbf.v4.new_notebook()

	# Add cell
	notebook['cells'].append(nbf.v4.new_code_cell('# Get Dataset\ndataset_accession = "{acc}"'.format(**locals())))

	# Get string
	notebook_string = nbf.writes(notebook)

	# Return string
	return notebook_string